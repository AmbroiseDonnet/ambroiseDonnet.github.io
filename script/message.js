document.addEventListener("DOMContentLoaded", () => {
    const messagesDiv = document.querySelector(".messages");
    const inputField = document.getElementById("message-input");
    const sendButton = document.getElementById("send-button");

    const predefinedMessages = [
        "Qui suis-je ? ü§î",
        "Je m'appelle Ambroise Donnet, √©tudiant en 2·µâ ann√©e de BUT Informatique √† l‚ÄôUniversit√© de Lille, sur le campus " +
        "de la Cit√© Scientifique √† Villeneuve-d‚ÄôAscq. üéì",

        "Qu'est-ce qui me motive ? üöÄ",
        "Curieux et motiv√©, je suis √† la recherche d‚Äôune alternance en tant que d√©veloppeur informatique. J‚Äôaime explorer" +
        " de nouvelles technologies et enrichir mes comp√©tences, que ce soit dans le cadre de mes √©tudes ou de projets personnels. üíª",

        "Quelle opportunit√© ai-je dans le cadre de ma formation ? ‚úàÔ∏è",
        "Dans le cadre de ma formation, j‚Äôai l‚Äôopportunit√© de r√©aliser un stage √† l‚Äô√©tranger, une exp√©rience qui me " +
        "permettra de d√©velopper mes capacit√©s en anglais, bien que je sois au Qu√©bec, tout en d√©couvrant d‚Äôautres " +
        "approches professionnelles. üåç",

        "Quelles sont mes passions ? üèä‚Äç‚ôÇÔ∏èüéÆ",
        "En dehors de mes √©tudes, je suis passionn√© par la natation et les jeux vid√©o, et je travaille comme animateur" +
        " pendant les vacances. üèñÔ∏è",

        "Qu'ai-je appris gr√¢ce √† mes passions ? üé®üß†",
        "Ces activit√©s m‚Äôont appris √† √™tre √† la fois cr√©atif, organis√©, et √† bien m‚Äôentendre avec des publics vari√©s. ü§ù"
    ];

    let messageIndex = 0;
    let typingInProgress = false;
    let question = true;

    // D√©sactiver l'interactivit√© de l'utilisateur
    function disableUserInteraction() {
        inputField.disabled = true;
        sendButton.disabled = true;
    }

    // R√©activer l'interactivit√© de l'utilisateur
    function enableUserInteraction() {
        inputField.disabled = false;
        sendButton.disabled = false;
    }

    // √âcrire un message lettre par lettre
    function typeMessage(message, callback) {
        disableUserInteraction(); // D√©sactiver l'utilisateur pendant la saisie
        inputField.value = ""; // R√©initialiser la zone de texte
        let charIndex = 0;
        const typingInterval = setInterval(() => {
            if (charIndex < message.length) {
                inputField.value += message[charIndex];
                charIndex++;
            } else {
                clearInterval(typingInterval); // Arr√™ter le "typing"
                setTimeout(() => {
                    if(question) {
                        addMessage(inputField.value, question);// Ajouter le message dans la conversation
                        question = false;
                    }else {
                        addMessage(inputField.value, question);// Ajouter le message dans la conversation
                        question = true;
                    }
                    inputField.value = ""; // R√©initialiser la zone de texte
                    enableUserInteraction(); // R√©activer l'interactivit√©
                    if (callback) callback(); // Passer au message suivant
                }, 500); // Attendre un peu avant d'ajouter le message
            }
        }, 20); // D√©lai entre chaque lettre
    }

    // Ajouter un message √† l'interface
    function addMessage(content, isSelf = false) {
        const message = document.createElement("div");
        message.classList.add("message");
        if (isSelf) message.classList.add("self");
        message.textContent = content;
        messagesDiv.appendChild(message);
        messagesDiv.scrollTop = messagesDiv.scrollHeight; // Scroll vers le bas
    }

    // Lancer une conversation automatique
    function startAutoConversation() {
        if (messageIndex < predefinedMessages.length) {
            typingInProgress = true; // Bloquer l'interaction utilisateur
            typeMessage(predefinedMessages[messageIndex], () => {
                messageIndex++;
                typingInProgress = false; // D√©bloquer apr√®s le message
                startAutoConversation(); // Passer au message suivant
            });
        }
    }

    // Gestion de la saisie utilisateur
    sendButton.addEventListener("click", () => {
        if (!typingInProgress) { // Permettre l'envoi uniquement si rien n'est en cours
            const userInput = inputField.value.trim();
            if (userInput) {
                addMessage(userInput, true);
                inputField.value = "";
            }
        }
    });

    inputField.addEventListener("keydown", (event) => {
        if (!typingInProgress && event.key === "Enter") {
            sendButton.click();
        }
    });

    // Lancer la conversation automatique d√®s le chargement
    startAutoConversation();
});

const textarea = document.getElementById('message-input');

textarea.addEventListener('input', () => {
    // R√©initialise la hauteur pour recalculer
    textarea.style.height = 'auto';
    // Ajuste la hauteur en fonction du contenu
    textarea.style.height = textarea.scrollHeight + 'px';
});